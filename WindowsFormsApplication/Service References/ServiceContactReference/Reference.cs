//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WindowsFormsApplication.ServiceContactReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceContactReference.IServiceContact")]
    public interface IServiceContact {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContact/RegisterUser", ReplyAction="http://tempuri.org/IServiceContact/RegisterUserResponse")]
        void RegisterUser(DAL.Model.User model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContact/RegisterUser", ReplyAction="http://tempuri.org/IServiceContact/RegisterUserResponse")]
        System.Threading.Tasks.Task RegisterUserAsync(DAL.Model.User model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContact/GetUserName", ReplyAction="http://tempuri.org/IServiceContact/GetUserNameResponse")]
        string GetUserName(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContact/GetUserName", ReplyAction="http://tempuri.org/IServiceContact/GetUserNameResponse")]
        System.Threading.Tasks.Task<string> GetUserNameAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContact/GetListContact", ReplyAction="http://tempuri.org/IServiceContact/GetListContactResponse")]
        WcfService1.ViewModel.ContactModel[] GetListContact(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContact/GetListContact", ReplyAction="http://tempuri.org/IServiceContact/GetListContactResponse")]
        System.Threading.Tasks.Task<WcfService1.ViewModel.ContactModel[]> GetListContactAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContact/Authorization", ReplyAction="http://tempuri.org/IServiceContact/AuthorizationResponse")]
        System.Nullable<int> Authorization(string login, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContact/Authorization", ReplyAction="http://tempuri.org/IServiceContact/AuthorizationResponse")]
        System.Threading.Tasks.Task<System.Nullable<int>> AuthorizationAsync(string login, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContact/AddContact", ReplyAction="http://tempuri.org/IServiceContact/AddContactResponse")]
        void AddContact(DAL.Model.Contact model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContact/AddContact", ReplyAction="http://tempuri.org/IServiceContact/AddContactResponse")]
        System.Threading.Tasks.Task AddContactAsync(DAL.Model.Contact model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContact/EditContact", ReplyAction="http://tempuri.org/IServiceContact/EditContactResponse")]
        void EditContact(DAL.Model.Contact model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContact/EditContact", ReplyAction="http://tempuri.org/IServiceContact/EditContactResponse")]
        System.Threading.Tasks.Task EditContactAsync(DAL.Model.Contact model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContact/DeleteContact", ReplyAction="http://tempuri.org/IServiceContact/DeleteContactResponse")]
        void DeleteContact(DAL.Model.Contact model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContact/DeleteContact", ReplyAction="http://tempuri.org/IServiceContact/DeleteContactResponse")]
        System.Threading.Tasks.Task DeleteContactAsync(DAL.Model.Contact model);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceContactChannel : WindowsFormsApplication.ServiceContactReference.IServiceContact, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceContactClient : System.ServiceModel.ClientBase<WindowsFormsApplication.ServiceContactReference.IServiceContact>, WindowsFormsApplication.ServiceContactReference.IServiceContact {
        
        public ServiceContactClient() {
        }
        
        public ServiceContactClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceContactClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceContactClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceContactClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void RegisterUser(DAL.Model.User model) {
            base.Channel.RegisterUser(model);
        }
        
        public System.Threading.Tasks.Task RegisterUserAsync(DAL.Model.User model) {
            return base.Channel.RegisterUserAsync(model);
        }
        
        public string GetUserName(int userId) {
            return base.Channel.GetUserName(userId);
        }
        
        public System.Threading.Tasks.Task<string> GetUserNameAsync(int userId) {
            return base.Channel.GetUserNameAsync(userId);
        }
        
        public WcfService1.ViewModel.ContactModel[] GetListContact(int userId) {
            return base.Channel.GetListContact(userId);
        }
        
        public System.Threading.Tasks.Task<WcfService1.ViewModel.ContactModel[]> GetListContactAsync(int userId) {
            return base.Channel.GetListContactAsync(userId);
        }
        
        public System.Nullable<int> Authorization(string login, string password) {
            return base.Channel.Authorization(login, password);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<int>> AuthorizationAsync(string login, string password) {
            return base.Channel.AuthorizationAsync(login, password);
        }
        
        public void AddContact(DAL.Model.Contact model) {
            base.Channel.AddContact(model);
        }
        
        public System.Threading.Tasks.Task AddContactAsync(DAL.Model.Contact model) {
            return base.Channel.AddContactAsync(model);
        }
        
        public void EditContact(DAL.Model.Contact model) {
            base.Channel.EditContact(model);
        }
        
        public System.Threading.Tasks.Task EditContactAsync(DAL.Model.Contact model) {
            return base.Channel.EditContactAsync(model);
        }
        
        public void DeleteContact(DAL.Model.Contact model) {
            base.Channel.DeleteContact(model);
        }
        
        public System.Threading.Tasks.Task DeleteContactAsync(DAL.Model.Contact model) {
            return base.Channel.DeleteContactAsync(model);
        }
    }
}
